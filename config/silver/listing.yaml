enable: True
name : listing
order: 1
inputs:
- name: listing
  uri: ${raw}/sample.csv
  parameters:
    format: csv
    options:
      header: True
      delimiter: ","
      nullValue: ""
      nanValue: NaN
      emptyValue: None
      encoding: "utf-8"
    ddl_schema : "
              listing_id bigint, 
              transaction_type string, 
              item_type string, 
              item_subtype string, 
              start_date string, 
              change_date string, 
              price decimal, 
              area string, 
              site_area decimal, 
              floor decimal, 
              room_count int, 
              balcony_count int, 
              terrace_count int, 
              has_garden string,  
              city string, 
              zipcode string, 
              has_passenger_lift string, 
              is_new_construction string, 
              build_year int, 
              terrace_area decimal, 
              has_cellar string, 
              is_furnished string, 
              description_fr string
             "


quality_gate:
- name: check_null_values
  validator: CoreValidator
  input: listing
  parameters:
    columns:
      ["listing_id" ,
              "transaction_type" ,
              "item_type" ,
              "start_date" ,
              "change_date" ,
              "price" ,
              "area" ,
              "site_area" ,
              "floor" ,
              "room_count" ,
              "balcony_count" ,
              "terrace_count" ,
              "has_garden" ,
              "city" ,
              "zipcode" ,
              "has_passenger_lift" ,
              "is_new_construction" ,
              "build_year" ,
              "terrace_area" ,
              "has_cellar" ,
              "is_furnished"  ]
    rule: expect_column_values_to_not_be_null
    rule_kwargs: ""
    dataset_name: "listing"
    output_table_name: "check_null_values_listing"

- name: check_duplicate_values
  validator: CoreValidator
  input: listing
  parameters:
    columns: listing_id
    rule: expect_column_values_to_be_unique
    dataset_name: "listing"
    output_table_name: "check_duplicate_values_listing"


- name: check_zip_code_values
  validator: CoreValidator
  input: listing
  parameters:
    columns: zipcode
    rule: expect_column_values_to_match_regex
    rule_kwargs:
      regex: '^\d{5}'
    dataset_name: "listing"
    output_table_name: "check_zip_code_values"

transforms:

- name: generate_tech_id
  transformer: FreeStyleTransformer
  inputs: listing
  parameters:
    function_name: preprocessing
    function_parameters:
      technical_keys:
        list_tech_id: [ "listing_id", "start_date", "change_date", "price"]



- name: clean_dataset_remove_null_values
  transformer: FreeStyleTransformer
  inputs: generate_tech_id
  parameters:
    function_name: replace_nulls_values
    function_parameters:
      columns_to_clean:
        listing_id: -1
        transaction_type: "unknown"
        item_type: "unknown"
        item_subtype: "unknown"
        start_date: "unknown"
        change_date: "unknown"
        price: -1.0
        area: -1.0
        site_area: -1.0
        floor: -1.0
        room_count: -1
        balcony_count: -1
        terrace_count: -1
        has_garden: "unknown"
        city: "unknown"
        zipcode: "unknown"
        has_passenger_lift: "unknown"
        is_new_construction: "unknown"
        build_year: -1
        terrace_area: -1.0
        has_cellar: "unknown"
        is_furnished: "unknown"
        description_fr: "unknown"


- name: clean_type_columns_dataset
  transformer: FreeStyleTransformer
  inputs: clean_dataset_remove_null_values
  parameters:
    function_name: clean_types_columns
    function_parameters:
      columns_to_clean:
        - transaction_type
        - item_type
        - item_subtype

outputs:
- name: output_well_formatted
  loader: src.load.ParquetLoader
  input: output_well_formatted
  uri: ${silver}/listing/
  parameters:
    table_name: listing

